{
  "table_name": "tasks",
  "status": "completed_successfully",
  "timestamp": "2025-07-19T10:49:28.304Z",
  "policies": {
    "total": 1,
    "analyzed": 1,
    "optimized": 1,
    "failed": 0,
    "skipped": 0,
    "no_changes_needed": 0
  },
  "transformations": [
    {
      "success": true,
      "original": {
        "tablename": "tasks",
        "policyname": "tasks_select_policy",
        "cmd": "SELECT",
        "permissive": "PERMISSIVE",
        "roles": [
          "authenticated"
        ],
        "qual": "assigned_to = auth.uid() OR created_by = auth.uid() OR project_id IN (SELECT id FROM projects WHERE user_id = auth.uid())",
        "with_check": null
      },
      "transformed": {
        "tablename": "tasks",
        "policyname": "tasks_select_policy",
        "cmd": "SELECT",
        "permissive": "PERMISSIVE",
        "roles": [
          "authenticated"
        ],
        "qual": "assigned_to = (SELECT auth.uid()) OR created_by = (SELECT auth.uid()) OR project_id IN (SELECT id FROM projects WHERE user_id = (SELECT auth.uid()))",
        "with_check": null
      },
      "changes_made": true,
      "transformations": {
        "qual": {
          "success": true,
          "original": "assigned_to = auth.uid() OR created_by = auth.uid() OR project_id IN (SELECT id FROM projects WHERE user_id = auth.uid())",
          "transformed": "assigned_to = (SELECT auth.uid()) OR created_by = (SELECT auth.uid()) OR project_id IN (SELECT id FROM projects WHERE user_id = (SELECT auth.uid()))",
          "changes_made": true,
          "transformations": [
            {
              "pattern": "direct_uid_calls",
              "count": 3,
              "positions": [
                14,
                41,
                110
              ]
            }
          ],
          "validation": {
            "valid": true,
            "issues": [],
            "checks": {
              "parentheses_balanced": true,
              "logical_operators_preserved": true,
              "no_syntax_errors": true
            }
          },
          "pattern_type": "comprehensive"
        },
        "with_check": null
      }
    }
  ],
  "sql_statements": {
    "individual": [
      {
        "success": true,
        "policy_name": "tasks_select_policy",
        "table_name": "tasks",
        "drop_sql": "DROP POLICY IF EXISTS \"tasks_select_policy\" ON \"tasks\";",
        "create_sql": "CREATE POLICY \"tasks_select_policy\" ON \"tasks\" AS PERMISSIVE FOR SELECT TO \"authenticated\" USING (assigned_to = (SELECT auth.uid()) OR created_by = (SELECT auth.uid()) OR project_id IN (SELECT id FROM projects WHERE user_id = (SELECT auth.uid())));",
        "transaction_sql": "-- Policy optimization for tasks.tasks_select_policy\nBEGIN;\n\n-- Drop existing policy\nDROP POLICY IF EXISTS \"tasks_select_policy\" ON \"tasks\";\n\n-- Create optimized policy\nCREATE POLICY \"tasks_select_policy\" ON \"tasks\" AS PERMISSIVE FOR SELECT TO \"authenticated\" USING (assigned_to = (SELECT auth.uid()) OR created_by = (SELECT auth.uid()) OR project_id IN (SELECT id FROM projects WHERE user_id = (SELECT auth.uid())));\n\nCOMMIT;",
        "rollback_sql": "-- Rollback for tasks.tasks_select_policy\nBEGIN;\n\n-- Drop optimized policy\nDROP POLICY IF EXISTS \"tasks_select_policy\" ON \"tasks\";\n\n-- Restore original policy\nCREATE POLICY \"tasks_select_policy\" ON \"tasks\" AS PERMISSIVE FOR SELECT TO \"authenticated\" USING (assigned_to = auth.uid() OR created_by = auth.uid() OR project_id IN (SELECT id FROM projects WHERE user_id = auth.uid()));\n\nCOMMIT;"
      }
    ],
    "batch_transaction": "-- Batch Policy Optimization Transaction\nBEGIN;\n\n-- tasks.tasks_select_policy\nDROP POLICY IF EXISTS \"tasks_select_policy\" ON \"tasks\";\nCREATE POLICY \"tasks_select_policy\" ON \"tasks\" AS PERMISSIVE FOR SELECT TO \"authenticated\" USING (assigned_to = (SELECT auth.uid()) OR created_by = (SELECT auth.uid()) OR project_id IN (SELECT id FROM projects WHERE user_id = (SELECT auth.uid())));\n\nCOMMIT;",
    "rollback_transaction": "-- Batch Policy Optimization Rollback\nBEGIN;\n\n-- Rollback tasks.tasks_select_policy\nDROP POLICY IF EXISTS \"tasks_select_policy\" ON \"tasks\";\nCREATE POLICY \"tasks_select_policy\" ON \"tasks\" AS PERMISSIVE FOR SELECT TO \"authenticated\" USING (assigned_to = auth.uid() OR created_by = auth.uid() OR project_id IN (SELECT id FROM projects WHERE user_id = auth.uid()));\n\nCOMMIT;"
  },
  "errors": []
}