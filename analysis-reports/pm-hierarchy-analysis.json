{
  "timestamp": "2025-07-17T08:05:21.837Z",
  "feasibility": {
    "viability": "HIGHLY VIABLE",
    "reasons": [
      "Maintains 5-role simplicity",
      "Adds necessary management oversight",
      "Creates clear approval chains",
      "Improves resource allocation",
      "Enables performance tracking"
    ],
    "implementationComplexity": {
      "database": "LOW - Add 2-3 columns",
      "application": "MEDIUM - Update approval logic",
      "ui": "MEDIUM - Add management dashboards",
      "migration": "LOW - Simple data updates"
    },
    "performanceImpact": {
      "additional_queries": "Minimal - mostly dashboard queries",
      "rls_complexity": "Slight increase but manageable",
      "overall_impact": "Negligible - still much better than 13 roles"
    }
  },
  "enhancedStructure": {
    "roles": [
      {
        "name": "management",
        "description": "Executive oversight with PM workload monitoring",
        "permissions": [
          "all_projects_overview",
          "pm_workload_monitoring",
          "pm_performance_tracking",
          "resource_allocation_oversight",
          "approval_hierarchy_management",
          "cross_project_coordination",
          "budget_oversight",
          "timeline_monitoring"
        ],
        "dashboardFeatures": [
          "PM workload distribution view",
          "Project timeline overview",
          "Resource utilization metrics",
          "Approval bottleneck identification",
          "Performance KPIs per PM",
          "Budget vs actual across all projects"
        ]
      },
      {
        "name": "project_manager",
        "description": "Project coordination with hierarchy levels",
        "hierarchyLevels": {
          "senior_pm": {
            "level": "senior",
            "permissions": [
              "approve_junior_pm_requests",
              "cross_project_coordination",
              "resource_reallocation",
              "budget_approval_higher_limits",
              "mentor_junior_pms"
            ],
            "approvalLimits": {
              "budget": 50000,
              "scope_changes": "major",
              "timeline_extensions": "30_days"
            }
          },
          "regular_pm": {
            "level": "regular",
            "permissions": [
              "project_management",
              "team_coordination",
              "progress_tracking",
              "field_updates",
              "client_communication"
            ],
            "approvalLimits": {
              "budget": 15000,
              "scope_changes": "minor",
              "timeline_extensions": "7_days"
            },
            "requiresApprovalFrom": [
              "senior_pm",
              "management"
            ]
          }
        }
      }
    ],
    "hierarchyImplementation": {
      "option1": {
        "name": "Permission Levels Within Role",
        "approach": "Add permission_level field to project_manager role",
        "structure": {
          "database": {
            "user_profiles": {
              "role": "project_manager",
              "permission_level": "senior | regular",
              "approval_limits": "JSONB field with limits"
            }
          },
          "benefits": [
            "Maintains 5-role simplicity",
            "Flexible hierarchy management",
            "Easy to adjust levels"
          ],
          "implementation": "Add permission_level column, update RLS policies"
        }
      },
      "option2": {
        "name": "Project-Based Hierarchy",
        "approach": "Senior PMs assigned to multiple projects, regular PMs to single projects",
        "structure": {
          "database": {
            "project_assignments": {
              "role_level": "lead_pm | regular_pm",
              "can_approve_for_project": "boolean",
              "approval_scope": "JSONB with specific permissions"
            }
          },
          "benefits": [
            "Project-specific hierarchy",
            "Flexible assignment",
            "Clear approval chains"
          ],
          "implementation": "Enhance project_assignments table"
        }
      },
      "option3": {
        "name": "Hybrid Approach (RECOMMENDED)",
        "approach": "Combine permission levels with project-based assignments",
        "structure": {
          "database": {
            "user_profiles": {
              "role": "project_manager",
              "seniority_level": "senior | regular",
              "base_approval_limits": "JSONB"
            },
            "project_assignments": {
              "assignment_type": "lead_pm | supporting_pm | field_pm",
              "project_approval_scope": "JSONB",
              "can_approve_others": "boolean"
            }
          },
          "benefits": [
            "Best of both worlds",
            "Flexible and scalable",
            "Clear hierarchy per project"
          ]
        }
      }
    }
  },
  "managementOversight": {
    "workloadMonitoring": {
      "pmWorkloadDashboard": {
        "metrics": [
          "Active projects per PM",
          "Task completion rates",
          "Budget utilization",
          "Timeline adherence",
          "Client satisfaction scores",
          "Team utilization rates"
        ],
        "visualizations": [
          "PM workload distribution chart",
          "Project timeline Gantt view",
          "Resource allocation heatmap",
          "Performance trend graphs"
        ]
      },
      "alerts": [
        "PM overload detection (>X active projects)",
        "Project timeline delays",
        "Budget variance alerts",
        "Approval bottlenecks",
        "Resource conflicts"
      ],
      "actions": [
        "Reassign projects between PMs",
        "Approve additional resources",
        "Escalate critical issues",
        "Adjust project priorities"
      ]
    },
    "approvalOversight": {
      "hierarchyManagement": [
        "Set PM approval limits",
        "Define escalation rules",
        "Monitor approval times",
        "Identify bottlenecks"
      ],
      "interventionCapabilities": [
        "Override PM decisions",
        "Fast-track critical approvals",
        "Reassign approval responsibilities",
        "Adjust hierarchy levels"
      ]
    }
  },
  "approvalHierarchies": {
    "budgetApprovals": {
      "flow": [
        {
          "level": "regular_pm",
          "limit": 15000,
          "escalatesTo": "senior_pm"
        },
        {
          "level": "senior_pm",
          "limit": 50000,
          "escalatesTo": "management"
        },
        {
          "level": "management",
          "limit": "unlimited",
          "escalatesTo": null
        }
      ]
    },
    "scopeChanges": {
      "minor": [
        "regular_pm",
        "senior_pm"
      ],
      "major": [
        "senior_pm",
        "management"
      ],
      "critical": [
        "management_only"
      ]
    },
    "timelineExtensions": {
      "1-7_days": [
        "regular_pm"
      ],
      "8-30_days": [
        "senior_pm"
      ],
      "30+_days": [
        "management"
      ]
    },
    "resourceRequests": {
      "additional_team_member": [
        "senior_pm"
      ],
      "equipment_purchase": [
        "senior_pm",
        "purchase_manager"
      ],
      "subcontractor_hiring": [
        "technical_lead",
        "senior_pm"
      ]
    }
  },
  "dashboard": {
    "sections": {
      "pmWorkloadOverview": {
        "title": "PM Workload Overview",
        "widgets": [
          {
            "type": "workload_distribution",
            "data": "Active projects per PM with capacity indicators",
            "visualization": "Bar chart with red/yellow/green capacity zones"
          },
          {
            "type": "performance_metrics",
            "data": "PM performance KPIs (timeline, budget, quality)",
            "visualization": "Scorecard with trend indicators"
          },
          {
            "type": "resource_utilization",
            "data": "Team utilization across all projects",
            "visualization": "Heatmap showing over/under utilization"
          }
        ]
      },
      "approvalPipeline": {
        "title": "Approval Pipeline",
        "widgets": [
          {
            "type": "pending_approvals",
            "data": "All pending approvals across hierarchy",
            "visualization": "List with urgency indicators"
          },
          {
            "type": "approval_bottlenecks",
            "data": "Slow approval points in the system",
            "visualization": "Flow diagram with delay indicators"
          },
          {
            "type": "escalation_alerts",
            "data": "Items requiring management attention",
            "visualization": "Alert cards with action buttons"
          }
        ]
      },
      "projectOverview": {
        "title": "All Projects Overview",
        "widgets": [
          {
            "type": "project_timeline",
            "data": "All projects with milestones and dependencies",
            "visualization": "Interactive Gantt chart"
          },
          {
            "type": "budget_tracking",
            "data": "Budget vs actual across all projects",
            "visualization": "Financial dashboard with variance analysis"
          },
          {
            "type": "risk_indicators",
            "data": "Projects at risk (timeline, budget, quality)",
            "visualization": "Risk matrix with mitigation actions"
          }
        ]
      }
    },
    "actionCapabilities": [
      "Reassign projects between PMs",
      "Approve escalated requests",
      "Adjust PM hierarchy levels",
      "Allocate additional resources",
      "Override approval decisions",
      "Set project priorities"
    ]
  },
  "schemaUpdates": "\n-- Add PM hierarchy support to existing 5-role structure\nALTER TABLE user_profiles ADD COLUMN IF NOT EXISTS seniority_level TEXT DEFAULT 'regular';\nALTER TABLE user_profiles ADD COLUMN IF NOT EXISTS approval_limits JSONB DEFAULT '{}';\n\n-- Update project assignments for hierarchy\nALTER TABLE project_assignments ADD COLUMN IF NOT EXISTS assignment_type TEXT DEFAULT 'regular_pm';\nALTER TABLE project_assignments ADD COLUMN IF NOT EXISTS can_approve_others BOOLEAN DEFAULT FALSE;\nALTER TABLE project_assignments ADD COLUMN IF NOT EXISTS approval_scope JSONB DEFAULT '{}';\n\n-- Create approval tracking table\nCREATE TABLE IF NOT EXISTS public.approval_requests (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    request_type TEXT NOT NULL, -- 'budget', 'scope_change', 'timeline', 'resource'\n    project_id UUID REFERENCES projects(id),\n    requested_by UUID REFERENCES user_profiles(id),\n    current_approver UUID REFERENCES user_profiles(id),\n    approval_chain JSONB, -- Array of approver hierarchy\n    request_data JSONB,\n    status TEXT DEFAULT 'pending', -- 'pending', 'approved', 'rejected', 'escalated'\n    approved_by UUID REFERENCES user_profiles(id),\n    approved_at TIMESTAMP,\n    rejection_reason TEXT,\n    escalation_reason TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- PM workload tracking view\nCREATE OR REPLACE VIEW pm_workload_overview AS\nSELECT \n    up.id,\n    up.first_name || ' ' || up.last_name as pm_name,\n    up.seniority_level,\n    COUNT(DISTINCT pa.project_id) as active_projects,\n    COUNT(DISTINCT CASE WHEN p.status = 'active' THEN pa.project_id END) as active_project_count,\n    AVG(p.progress_percentage) as avg_project_progress,\n    SUM(p.budget) as total_budget_managed,\n    COUNT(DISTINCT ar.id) as pending_approvals\nFROM user_profiles up\nLEFT JOIN project_assignments pa ON up.id = pa.user_id AND pa.is_active = true\nLEFT JOIN projects p ON pa.project_id = p.id\nLEFT JOIN approval_requests ar ON up.id = ar.current_approver AND ar.status = 'pending'\nWHERE up.role = 'project_manager'\nGROUP BY up.id, up.first_name, up.last_name, up.seniority_level;\n\n-- Enhanced RLS policies for hierarchy\nCREATE POLICY \"Senior PM approval access\" ON approval_requests\n    FOR ALL USING (\n        (auth.jwt() ->> 'user_role') = 'management' OR\n        (current_approver = auth.uid()) OR\n        (requested_by = auth.uid()) OR\n        (\n            (auth.jwt() ->> 'user_role') = 'project_manager' AND\n            EXISTS (\n                SELECT 1 FROM user_profiles \n                WHERE id = auth.uid() \n                AND seniority_level = 'senior'\n            )\n        )\n    );\n",
  "implementationPlan": {
    "phase1": {
      "title": "Database Schema Enhancement",
      "duration": "1 week",
      "tasks": [
        "Add seniority_level and approval_limits to user_profiles",
        "Enhance project_assignments with hierarchy fields",
        "Create approval_requests table",
        "Create PM workload views",
        "Update RLS policies for hierarchy"
      ]
    },
    "phase2": {
      "title": "Management Dashboard",
      "duration": "2-3 weeks",
      "tasks": [
        "Build PM workload overview dashboard",
        "Create approval pipeline monitoring",
        "Add project overview with PM assignments",
        "Implement real-time alerts and notifications",
        "Add management action capabilities"
      ]
    },
    "phase3": {
      "title": "Approval Hierarchy Logic",
      "duration": "2 weeks",
      "tasks": [
        "Implement approval routing logic",
        "Create escalation workflows",
        "Add approval limit enforcement",
        "Build approval tracking system",
        "Add notification system for approvals"
      ]
    },
    "phase4": {
      "title": "PM Interface Updates",
      "duration": "1-2 weeks",
      "tasks": [
        "Update PM interfaces for hierarchy",
        "Add approval request forms",
        "Create approval status tracking",
        "Add senior PM approval capabilities",
        "Update mobile interfaces"
      ]
    },
    "phase5": {
      "title": "Testing and Migration",
      "duration": "1 week",
      "tasks": [
        "Assign seniority levels to existing PMs",
        "Test approval workflows",
        "Validate management dashboard",
        "Performance testing",
        "User training"
      ]
    }
  },
  "keyBenefits": [
    "Management can oversee all PM workloads",
    "Clear approval hierarchy between PMs",
    "Maintains 5-role simplicity",
    "Adds performance tracking",
    "Enables resource optimization",
    "Creates accountability structure"
  ],
  "viabilityAssessment": {
    "technical": "HIGHLY VIABLE",
    "business": "EXCELLENT FIT",
    "performance": "MINIMAL IMPACT",
    "complexity": "LOW TO MEDIUM",
    "timeline": "7-9 weeks additional"
  }
}